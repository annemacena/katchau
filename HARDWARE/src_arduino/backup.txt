//Loads Libraries
#include <EmonLib.h>
#include <SPI.h>
#include <Ethernet.h>
#include <EthernetUdp.h>
#include <NTPClient.h>
#include <ArduinoHttpClient.h>
//Declares Global Variables
#define VOLT 127.0
#define sct1 A0
#define sct2 A1
#define sct3 A2
#define CAL 0.115;
unsigned long lastConnectionTime = 0;       
const unsigned long postingInterval = 10*1000;
EnergyMonitor emon1, emon2, emon3;
float totalWatts_by_cicle = 0.0;
bool printWebData = true;
unsigned long byteCount = 0;
byte mac[] = {
  0xDE, 0xAD, 0xBE, 0xEF, 0xFE, 0xED
};
IPAddress ip(192, 168, 0, 50);
IPAddress myDns(192, 168, 0, 1);
IPAddress gateway(192,168,0,1);
IPAddress subnet(255, 255, 255, 0);
EthernetClient client;
char server[] = "katchau-dev.back4app.io";
void setup()
{
  Serial.begin(9600);
  while (!Serial) {
    ;
  }

  Serial.println("Initialize Ethernet with DHCP:");
  if (Ethernet.begin(mac) == 0) {
    Serial.println("Failed to configure Ethernet using DHCP");
    // Check for Ethernet hardware present
    if (Ethernet.hardwareStatus() == EthernetNoHardware) {
      Serial.println("Ethernet shield was not found.  Sorry, can't run without hardware. :(");
      while (true) {
        delay(1); // do nothing, no point running without Ethernet hardware
      }
    }
    if (Ethernet.linkStatus() == LinkOFF) {
      Serial.println("Ethernet cable is not connected.");
    }
    // try to congifure using IP address instead of DHCP:
    Ethernet.begin(mac, ip, myDns, gateway, subnet);
  } else {
    Serial.print("  DHCP assigned IP ");
    Serial.println(Ethernet.localIP());
  }
  // give the Ethernet shield a second to initialize:
  delay(1000);
  // give the Ethernet shield a second to initialize:
  Serial.print("[...] Sending Request to ");
  Serial.println(server);
  // Make a HTTP request:
  
  

  if (client.connect(server, 80)) {
  Serial.print("[!] Connected to IP: ");
  Serial.println(client.remoteIP());
  Serial.println("GET katchau-dev.back4app.io/classes/Device HTTP/1.1 X-Parse-Application-Id:H5dcONjNMNy5WTpFt9tXAHdEAeanqT8mlq9HRSPu X-Parse-REST-API-Key:V7c9YuMHLlGhAveQmQapxiviC6TkctOBC7aNcxxd");
  client.println("GET katchau-dev.back4app.io/classes/Device HTTP/1.1");
  client.println("X-Parse-Application-Id:H5dcONjNMNy5WTpFt9tXAHdEAeanqT8mlq9HRSPu");
  client.println("X-Parse-REST-API-Key:V7c9YuMHLlGhAveQmQapxiviC6TkctOBC7aNcxxd");
//    client.println("User-Agent: arduino-ethernet");
//    client.println("accept: application/json");
//    client.println("Content-Type: application/json");
//    client.println("Content-length: ");
  Serial.println("[Passed]");
  } 
  else 
  // if you couldn't make a connection:
  Serial.println("connection failed");

}


void loop()
{
  
  if (client.available()) {
    Serial.println("Cliente Lendo...");
    char c = client.read();
    Serial.write(c);
  }
  if(!client.connected()){
    Serial.println("Disconnecting...");
  }
  Serial.println("Here goes nothing !");
  while(true){;}
  
}